// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
. . . . . . . . . . 2 . . . . . 
. . . . . . . . . . 2 . . . . . 
. . . . . . . . . . 2 . . . . . 
. . . . . . . . . . 2 . . . . . 
. . . . . . . . . . 2 . . . . . 
. . . . . . . . . . 2 . . . . . 
. . . . . . . . . . 2 . . . . . 
2 2 2 2 2 2 2 2 2 2 2 . . . . . 
2 2 2 2 2 2 2 2 2 2 2 . . . . . 
. . . . . . . . . 2 2 . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . 2 2 . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.builtin.forestTiles10,sprites.builtin.forestTiles9,sprites.builtin.forestTiles13,sprites.builtin.forestTiles14,sprites.builtin.forestTiles15,sprites.builtin.forestTiles11,sprites.builtin.forestTiles6], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
2 2 2 2 2 . 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 . 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 . 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 . 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 . 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 . 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 . 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 . 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 . 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 . 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 . 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 . 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 . 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 . 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 . 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 . 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
